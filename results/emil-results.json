{"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":4,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":6,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1653408014661,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Testing ATC assessment submission","1"],"duration":1,"failureMessages":[],"fullName":"Testing ATC assessment submission 1 Should return the 4th character in the array","location":null,"status":"passed","title":"Should return the 4th character in the array"},{"ancestorTitles":["Testing ATC assessment submission","2"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m13\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/tests/js1/arrayAssessment.test.js:21:31)\n    at Promise.then.completed (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/utils.js:333:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/utils.js:259:10)\n    at _callCircusTest (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/run.js:276:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/run.js:208:3)\n    at _runTestsForDescribeBlock (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/run.js:96:9)\n    at _runTestsForDescribeBlock (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/run.js:90:9)\n    at _runTestsForDescribeBlock (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/run.js:90:9)"],"fullName":"Testing ATC assessment submission 2 Should return the correct character","location":null,"status":"failed","title":"Should return the correct character"},{"ancestorTitles":["Testing ATC assessment submission","3"],"duration":0,"failureMessages":[],"fullName":"Testing ATC assessment submission 3 When passed a certain bloodType it should return only characters with that type","location":null,"status":"passed","title":"When passed a certain bloodType it should return only characters with that type"},{"ancestorTitles":["Testing ATC assessment submission","4"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"string\"\u001b[39m\nReceived: \u001b[31m\"undefined\"\u001b[39m\n    at Object.toBe (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/tests/js1/arrayAssessment.test.js:36:37)\n    at Promise.then.completed (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/utils.js:333:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/utils.js:259:10)\n    at _callCircusTest (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/run.js:276:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/run.js:208:3)\n    at _runTestsForDescribeBlock (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/run.js:96:9)\n    at _runTestsForDescribeBlock (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/run.js:90:9)\n    at _runTestsForDescribeBlock (/Users/matias/Codaisseur/dev/automated-ATC/test-runner/node_modules/jest-circus/build/run.js:90:9)"],"fullName":"Testing ATC assessment submission 4 Should return an array that contains only the `quotes` of each character","location":null,"status":"failed","title":"Should return an array that contains only the `quotes` of each character"},{"ancestorTitles":["Testing ATC assessment submission","5"],"duration":0,"failureMessages":[],"fullName":"Testing ATC assessment submission 5 Should return array with all characters that are not human","location":null,"status":"passed","title":"Should return array with all characters that are not human"},{"ancestorTitles":["Testing ATC assessment submission","6"],"duration":1,"failureMessages":[],"fullName":"Testing ATC assessment submission 6 When passed a certain bloodType it should return only characters with that type","location":null,"status":"passed","title":"When passed a certain bloodType it should return only characters with that type"}],"endTime":1653408014872,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTesting ATC assessment submission › 2 › Should return the correct character\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m13\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 |\u001b[39m   describe(\u001b[32m\"2\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m     test(\u001b[32m\"Should return the correct character\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 21 |\u001b[39m       expect(findById(\u001b[35m13\u001b[39m)\u001b[33m.\u001b[39mid)\u001b[33m.\u001b[39mtoEqual(\u001b[35m13\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 |\u001b[39m       expect(findById(\u001b[35m34\u001b[39m)\u001b[33m.\u001b[39mname)\u001b[33m.\u001b[39mtoEqual(\u001b[32m\"Remus Lupin\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/js1/arrayAssessment.test.js\u001b[39m\u001b[0m\u001b[2m:21:31)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTesting ATC assessment submission › 4 › Should return an array that contains only the `quotes` of each character\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"string\"\u001b[39m\n    Received: \u001b[31m\"undefined\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 |\u001b[39m     test(\u001b[32m\"Should return an array that contains only the `quotes` of each character\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 |\u001b[39m       \u001b[36mconst\u001b[39m quotes \u001b[33m=\u001b[39m characters\u001b[33m.\u001b[39mmap((c) \u001b[33m=>\u001b[39m c\u001b[33m.\u001b[39mquote)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 36 |\u001b[39m       expect(\u001b[36mtypeof\u001b[39m getQuotes()[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoBe(\u001b[32m\"string\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 |\u001b[39m       expect(getQuotes())\u001b[33m.\u001b[39mtoHaveLength(quotes\u001b[33m.\u001b[39mlength)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/js1/arrayAssessment.test.js\u001b[39m\u001b[0m\u001b[2m:36:37)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/matias/Codaisseur/dev/automated-ATC/test-runner/tests/js1/arrayAssessment.test.js","startTime":1653408014673,"status":"failed","summary":""}],"wasInterrupted":false}